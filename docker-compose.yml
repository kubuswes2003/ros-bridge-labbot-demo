services:
  ros1_robot:
    build: 
      context: ./ros1_robot
      dockerfile: Dockerfile
    container_name: labbot_mock
    environment:
      - ROS_MASTER_URI=http://ros1_robot:11311
      - ROS_HOSTNAME=ros1_robot
    networks:
      - ros_network
    volumes:
      - ./ros1_robot/src:/robot_ws:rw
    command: "bash -c 'source /opt/ros/noetic/setup.bash && roscore & sleep 3 && python3 /robot_ws/mock_robot.py'"

  ros1_bridge:
    image: ros:foxy-ros1-bridge-focal
    container_name: ros_bridge
    depends_on:
      - ros1_robot
    environment:
      - ROS_MASTER_URI=http://ros1_robot:11311
      - ROS_HOSTNAME=ros1_bridge
      - ROS_DOMAIN_ID=0
    networks:
      - ros_network
    command: "bash -c 'source /opt/ros/noetic/setup.bash && source /opt/ros/foxy/setup.bash && ros2 run ros1_bridge dynamic_bridge --bridge-all-topics'"

  ros2_controller:
    build:
      context: ./ros2_controller  
      dockerfile: Dockerfile
    container_name: robot_controller
    depends_on:
      - ros1_bridge
    environment:
      - ROS_DOMAIN_ID=0
    networks:
      - ros_network
    volumes:
      - ./ros2_controller/src:/ros2_ws/src/robot_controller:rw
    stdin_open: true
    tty: true
    command: "bash -c 'source /opt/ros/foxy/setup.bash && source /ros2_ws/install/setup.bash && python3 /ros2_ws/src/robot_controller/robot_controller/controller_node.py'"

  web_dashboard:
    image: nginx:alpine
    container_name: ros_dashboard
    ports:
      - "8080:80"
    volumes:
      - ./visualization:/usr/share/nginx/html:ro
    networks:
      - ros_network

networks:
  ros_network:
    driver: bridge